plugins {
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation project(':common:models')

	// cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // keycloak
    implementation "org.keycloak:keycloak-admin-client:${keycloak_version}"

    // datasource
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	// s3
    implementation("io.minio:minio:${minio_version}")

	// xlsx
    implementation "org.apache.poi:poi-ooxml:${apache_poi_version}"

    //jwt
	implementation 'com.auth0:java-jwt:4.4.0'

	// event-driving
	implementation 'org.springframework.kafka:spring-kafka'

	// open-api
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swagger_version}"

    // validation
	implementation "org.springframework.boot:spring-boot-starter-validation"

	// monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
// 	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
// 	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
