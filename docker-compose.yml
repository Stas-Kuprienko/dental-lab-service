version: '4.3'

networks:
  lab-networks:
    driver: bridge

services:

  postgres:
    container_name: dental_db
    image: postgres:15.3-alpine
    networks:
      - lab-networks
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_DB=dental_lab
    ports:
      - '5432:5432'
    volumes:
      - ./volumes/postgresql/data:/var/lib/postgresql/data
      - ./create-db.sql:/docker-entrypoint-initdb.d/create_database.sql

  keycloak:
    container_name: dental_keycloak
    image: quay.io/keycloak/keycloak:25.0
    command: start
    networks:
      - lab-networks
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloakdb
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    volumes:
      - ./volumes/keycloak/data:/opt/keycloak/data

  kafka:
    container_name: dental_kafka
    image: bitnami/kafka:latest
    networks:
      - lab-networks
    ports:
      - '9092:9092'
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9091,CONTROLLER://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9091,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  redis:
    container_name: dental_redis
    image: redis:latest
    networks:
      - lab-networks
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    #      --requirepass 12345
    volumes:
      - ./volumes/redis/data:/data

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - lab-networks

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - lab-networks

  prometheus:
    image: "prom/prometheus"
    networks:
      - lab-networks
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "${ZIPKIN_PORT}:9411"
    networks:
      - lab-networks


volumes:
  kafka_data:
    driver: local
  grafana-storage: {}
  prometheus_data: {}
